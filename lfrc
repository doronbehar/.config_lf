# interpreter for shell commands (needs to be POSIX compatible)
set shell zsh

set color256

# Do as explained here: https://github.com/gokcehan/lf/wiki/Tips#split-words-by-default-in-zsh
set shellopts '-eu:--shwordsplit'
set ifs "\n"

# leave some space at the top and the bottom of the screen
set scrolloff 10

# rename current file without overwrite
cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1
map rc push :rename<space>
map ra $lf -remote "send $id push :rename<space>$f"
map re $lf -remote "send $id push :rename<space>$f<a-b><a-d>"
# map builtin delete command
map <delete> delete
# better asynchronious search
map / $lf -remote "send $id select '$(all_files=(./*(ND)); printf '%s\n' ${all_files[@]} | fzf)'"
map i $bat --paging=always $f
# Add delete with sudo command
cmd Delete !{{
	echo $fs | xargs -d$'\n' sudo rm -r
}}
# Add paste with sudo command
cmd Paste !{{
	lf -remote 'load' | while read file; do
		if [ ! -n "${mode+1}" ]; then
			mode="$file"
			continue
		fi
		files+=("$file")
	done
	if [[ "$mode" == copy ]]; then
		sudo cp -Rgi $files .
	elif [[ "$mode" == move ]]; then
		sudo mv -gi $files .
	fi
}}
# `mkdir` and `touch` mappings
map ad push $mkdir<space>""<left>
map af push $touch<space>""<left>

# use a different mapping to redraw, the default '<c-l>' clashes with tmux and vim navigations
map ; redraw

map | push !cat<space>$f<space>|<space>

map e $$EDITOR $f $fs
# If $EDITOR is nvr --remote-silent --remote-wait as it is when lf is running
# inside a Neovim's :term, we would like to use just $nvr as the editor
${{
	if [ -n "${NVIM_LISTEN_ADDRESS+1}" ]; then
		lf -remote "send $id map e \$nvr \$f \$fs"
	fi
}}

# from some reason this doesn't work: `set dirfirst off`
set dirfirst!
set drawbox on
set hidden on
set globsearch on
set tabstop 4
set previewer pistol

cmap <up> cmd-history-prev
cmap <down> cmd-history-next
# waiting for https://github.com/gokcehan/lf/issues/111
#cmap <c-right> cmd-word
#cmap <c-left> cmd-word-back

# vim: ft=lf
